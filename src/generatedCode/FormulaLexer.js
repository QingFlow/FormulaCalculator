// Generated from Formula.g4 by ANTLR 4.7
// jshint ignore: start
var antlr4 = require('antlr4/index');


var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0002!\u00e3\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e",
    "\t\u001e\u0004\u001f\t\u001f\u0004 \t \u0003\u0002\u0003\u0002\u0003",
    "\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003",
    "\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003",
    "\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\t\u0003",
    "\t\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\u000b\u0003\f\u0003",
    "\f\u0003\f\u0003\r\u0003\r\u0003\u000e\u0003\u000e\u0003\u000e\u0003",
    "\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0011\u0003",
    "\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0005\u0011p",
    "\n\u0011\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0005\u0012",
    "v\n\u0012\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013",
    "\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0005\u0013",
    "\u0082\n\u0013\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003",
    "\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0005\u0014\u008c\n\u0014",
    "\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015",
    "\u0005\u0015\u0094\n\u0015\u0003\u0016\u0003\u0016\u0003\u0016\u0003",
    "\u0016\u0003\u0016\u0003\u0016\u0005\u0016\u009c\n\u0016\u0003\u0017",
    "\u0003\u0017\u0003\u0018\u0003\u0018\u0007\u0018\u00a2\n\u0018\f\u0018",
    "\u000e\u0018\u00a5\u000b\u0018\u0003\u0019\u0003\u0019\u0003\u0019\u0007",
    "\u0019\u00aa\n\u0019\f\u0019\u000e\u0019\u00ad\u000b\u0019\u0005\u0019",
    "\u00af\n\u0019\u0003\u001a\u0003\u001a\u0007\u001a\u00b3\n\u001a\f\u001a",
    "\u000e\u001a\u00b6\u000b\u001a\u0003\u001a\u0003\u001a\u0007\u001a\u00ba",
    "\n\u001a\f\u001a\u000e\u001a\u00bd\u000b\u001a\u0005\u001a\u00bf\n\u001a",
    "\u0003\u001b\u0006\u001b\u00c2\n\u001b\r\u001b\u000e\u001b\u00c3\u0003",
    "\u001b\u0003\u001b\u0003\u001c\u0003\u001c\u0006\u001c\u00ca\n\u001c",
    "\r\u001c\u000e\u001c\u00cb\u0005\u001c\u00ce\n\u001c\u0003\u001c\u0003",
    "\u001c\u0003\u001d\u0003\u001d\u0005\u001d\u00d4\n\u001d\u0003\u001e",
    "\u0003\u001e\u0003\u001e\u0005\u001e\u00d9\n\u001e\u0003\u001f\u0003",
    "\u001f\u0003\u001f\u0003\u001f\u0003\u001f\u0003\u001f\u0003\u001f\u0003",
    " \u0003 \u0002\u0002!\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b",
    "\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b",
    "\u000f\u001d\u0010\u001f\u0011!\u0012#\u0013%\u0014\'\u0015)\u0016+",
    "\u0017-\u0018/\u00191\u001a3\u001b5\u001c7\u001d9\u001e;\u001f= ?!\u0003",
    "\u0002\n\u0005\u0002C\\aac|\u0006\u00022;C\\aac|\u0003\u00023;\u0003",
    "\u00022;\u0005\u0002\u000b\f\u000f\u000f\"\"\u0004\u0002$$^^\n\u0002",
    "$$))^^ddhhppttvv\u0005\u00022;CHch\u0002\u00f3\u0002\u0003\u0003\u0002",
    "\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002",
    "\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002",
    "\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002",
    "\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002",
    "\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002",
    "\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002",
    "\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002\u001f\u0003\u0002",
    "\u0002\u0002\u0002!\u0003\u0002\u0002\u0002\u0002#\u0003\u0002\u0002",
    "\u0002\u0002%\u0003\u0002\u0002\u0002\u0002\'\u0003\u0002\u0002\u0002",
    "\u0002)\u0003\u0002\u0002\u0002\u0002+\u0003\u0002\u0002\u0002\u0002",
    "-\u0003\u0002\u0002\u0002\u0002/\u0003\u0002\u0002\u0002\u00021\u0003",
    "\u0002\u0002\u0002\u00023\u0003\u0002\u0002\u0002\u00025\u0003\u0002",
    "\u0002\u0002\u00027\u0003\u0002\u0002\u0002\u00029\u0003\u0002\u0002",
    "\u0002\u0002;\u0003\u0002\u0002\u0002\u0002=\u0003\u0002\u0002\u0002",
    "\u0002?\u0003\u0002\u0002\u0002\u0003A\u0003\u0002\u0002\u0002\u0005",
    "I\u0003\u0002\u0002\u0002\u0007K\u0003\u0002\u0002\u0002\tM\u0003\u0002",
    "\u0002\u0002\u000bO\u0003\u0002\u0002\u0002\rQ\u0003\u0002\u0002\u0002",
    "\u000fS\u0003\u0002\u0002\u0002\u0011U\u0003\u0002\u0002\u0002\u0013",
    "W\u0003\u0002\u0002\u0002\u0015Y\u0003\u0002\u0002\u0002\u0017\\\u0003",
    "\u0002\u0002\u0002\u0019_\u0003\u0002\u0002\u0002\u001ba\u0003\u0002",
    "\u0002\u0002\u001dd\u0003\u0002\u0002\u0002\u001ff\u0003\u0002\u0002",
    "\u0002!o\u0003\u0002\u0002\u0002#u\u0003\u0002\u0002\u0002%\u0081\u0003",
    "\u0002\u0002\u0002\'\u008b\u0003\u0002\u0002\u0002)\u0093\u0003\u0002",
    "\u0002\u0002+\u009b\u0003\u0002\u0002\u0002-\u009d\u0003\u0002\u0002",
    "\u0002/\u009f\u0003\u0002\u0002\u00021\u00ae\u0003\u0002\u0002\u0002",
    "3\u00b0\u0003\u0002\u0002\u00025\u00c1\u0003\u0002\u0002\u00027\u00c7",
    "\u0003\u0002\u0002\u00029\u00d3\u0003\u0002\u0002\u0002;\u00d8\u0003",
    "\u0002\u0002\u0002=\u00da\u0003\u0002\u0002\u0002?\u00e1\u0003\u0002",
    "\u0002\u0002AB\u0007%\u0002\u0002BC\u0007s\u0002\u0002CD\u0007w\u0002",
    "\u0002DE\u0007g\u0002\u0002EF\u0007K\u0002\u0002FG\u0007f\u0002\u0002",
    "GH\u0007a\u0002\u0002H\u0004\u0003\u0002\u0002\u0002IJ\u0007]\u0002",
    "\u0002J\u0006\u0003\u0002\u0002\u0002KL\u0007_\u0002\u0002L\b\u0003",
    "\u0002\u0002\u0002MN\u0007-\u0002\u0002N\n\u0003\u0002\u0002\u0002O",
    "P\u0007/\u0002\u0002P\f\u0003\u0002\u0002\u0002QR\u0007,\u0002\u0002",
    "R\u000e\u0003\u0002\u0002\u0002ST\u00071\u0002\u0002T\u0010\u0003\u0002",
    "\u0002\u0002UV\u0007*\u0002\u0002V\u0012\u0003\u0002\u0002\u0002WX\u0007",
    "+\u0002\u0002X\u0014\u0003\u0002\u0002\u0002YZ\u0007?\u0002\u0002Z[",
    "\u0007?\u0002\u0002[\u0016\u0003\u0002\u0002\u0002\\]\u0007#\u0002\u0002",
    "]^\u0007?\u0002\u0002^\u0018\u0003\u0002\u0002\u0002_`\u0007>\u0002",
    "\u0002`\u001a\u0003\u0002\u0002\u0002ab\u0007>\u0002\u0002bc\u0007?",
    "\u0002\u0002c\u001c\u0003\u0002\u0002\u0002de\u0007@\u0002\u0002e\u001e",
    "\u0003\u0002\u0002\u0002fg\u0007@\u0002\u0002gh\u0007?\u0002\u0002h",
    " \u0003\u0002\u0002\u0002ij\u0007C\u0002\u0002jk\u0007P\u0002\u0002",
    "kp\u0007F\u0002\u0002lm\u0007c\u0002\u0002mn\u0007p\u0002\u0002np\u0007",
    "f\u0002\u0002oi\u0003\u0002\u0002\u0002ol\u0003\u0002\u0002\u0002p\"",
    "\u0003\u0002\u0002\u0002qr\u0007Q\u0002\u0002rv\u0007T\u0002\u0002s",
    "t\u0007q\u0002\u0002tv\u0007t\u0002\u0002uq\u0003\u0002\u0002\u0002",
    "us\u0003\u0002\u0002\u0002v$\u0003\u0002\u0002\u0002wx\u0007H\u0002",
    "\u0002xy\u0007C\u0002\u0002yz\u0007N\u0002\u0002z{\u0007U\u0002\u0002",
    "{\u0082\u0007G\u0002\u0002|}\u0007h\u0002\u0002}~\u0007c\u0002\u0002",
    "~\u007f\u0007n\u0002\u0002\u007f\u0080\u0007u\u0002\u0002\u0080\u0082",
    "\u0007g\u0002\u0002\u0081w\u0003\u0002\u0002\u0002\u0081|\u0003\u0002",
    "\u0002\u0002\u0082&\u0003\u0002\u0002\u0002\u0083\u0084\u0007V\u0002",
    "\u0002\u0084\u0085\u0007T\u0002\u0002\u0085\u0086\u0007W\u0002\u0002",
    "\u0086\u008c\u0007G\u0002\u0002\u0087\u0088\u0007v\u0002\u0002\u0088",
    "\u0089\u0007t\u0002\u0002\u0089\u008a\u0007w\u0002\u0002\u008a\u008c",
    "\u0007g\u0002\u0002\u008b\u0083\u0003\u0002\u0002\u0002\u008b\u0087",
    "\u0003\u0002\u0002\u0002\u008c(\u0003\u0002\u0002\u0002\u008d\u008e",
    "\u0007P\u0002\u0002\u008e\u008f\u0007Q\u0002\u0002\u008f\u0094\u0007",
    "V\u0002\u0002\u0090\u0091\u0007p\u0002\u0002\u0091\u0092\u0007q\u0002",
    "\u0002\u0092\u0094\u0007v\u0002\u0002\u0093\u008d\u0003\u0002\u0002",
    "\u0002\u0093\u0090\u0003\u0002\u0002\u0002\u0094*\u0003\u0002\u0002",
    "\u0002\u0095\u0096\u0007Z\u0002\u0002\u0096\u0097\u0007Q\u0002\u0002",
    "\u0097\u009c\u0007T\u0002\u0002\u0098\u0099\u0007z\u0002\u0002\u0099",
    "\u009a\u0007q\u0002\u0002\u009a\u009c\u0007t\u0002\u0002\u009b\u0095",
    "\u0003\u0002\u0002\u0002\u009b\u0098\u0003\u0002\u0002\u0002\u009c,",
    "\u0003\u0002\u0002\u0002\u009d\u009e\u0007.\u0002\u0002\u009e.\u0003",
    "\u0002\u0002\u0002\u009f\u00a3\t\u0002\u0002\u0002\u00a0\u00a2\t\u0003",
    "\u0002\u0002\u00a1\u00a0\u0003\u0002\u0002\u0002\u00a2\u00a5\u0003\u0002",
    "\u0002\u0002\u00a3\u00a1\u0003\u0002\u0002\u0002\u00a3\u00a4\u0003\u0002",
    "\u0002\u0002\u00a40\u0003\u0002\u0002\u0002\u00a5\u00a3\u0003\u0002",
    "\u0002\u0002\u00a6\u00af\u00072\u0002\u0002\u00a7\u00ab\t\u0004\u0002",
    "\u0002\u00a8\u00aa\t\u0005\u0002\u0002\u00a9\u00a8\u0003\u0002\u0002",
    "\u0002\u00aa\u00ad\u0003\u0002\u0002\u0002\u00ab\u00a9\u0003\u0002\u0002",
    "\u0002\u00ab\u00ac\u0003\u0002\u0002\u0002\u00ac\u00af\u0003\u0002\u0002",
    "\u0002\u00ad\u00ab\u0003\u0002\u0002\u0002\u00ae\u00a6\u0003\u0002\u0002",
    "\u0002\u00ae\u00a7\u0003\u0002\u0002\u0002\u00af2\u0003\u0002\u0002",
    "\u0002\u00b0\u00b4\t\u0004\u0002\u0002\u00b1\u00b3\t\u0005\u0002\u0002",
    "\u00b2\u00b1\u0003\u0002\u0002\u0002\u00b3\u00b6\u0003\u0002\u0002\u0002",
    "\u00b4\u00b2\u0003\u0002\u0002\u0002\u00b4\u00b5\u0003\u0002\u0002\u0002",
    "\u00b5\u00be\u0003\u0002\u0002\u0002\u00b6\u00b4\u0003\u0002\u0002\u0002",
    "\u00b7\u00bb\u00070\u0002\u0002\u00b8\u00ba\t\u0005\u0002\u0002\u00b9",
    "\u00b8\u0003\u0002\u0002\u0002\u00ba\u00bd\u0003\u0002\u0002\u0002\u00bb",
    "\u00b9\u0003\u0002\u0002\u0002\u00bb\u00bc\u0003\u0002\u0002\u0002\u00bc",
    "\u00bf\u0003\u0002\u0002\u0002\u00bd\u00bb\u0003\u0002\u0002\u0002\u00be",
    "\u00b7\u0003\u0002\u0002\u0002\u00be\u00bf\u0003\u0002\u0002\u0002\u00bf",
    "4\u0003\u0002\u0002\u0002\u00c0\u00c2\t\u0006\u0002\u0002\u00c1\u00c0",
    "\u0003\u0002\u0002\u0002\u00c2\u00c3\u0003\u0002\u0002\u0002\u00c3\u00c1",
    "\u0003\u0002\u0002\u0002\u00c3\u00c4\u0003\u0002\u0002\u0002\u00c4\u00c5",
    "\u0003\u0002\u0002\u0002\u00c5\u00c6\b\u001b\u0002\u0002\u00c66\u0003",
    "\u0002\u0002\u0002\u00c7\u00cd\u0007$\u0002\u0002\u00c8\u00ca\u0005",
    "9\u001d\u0002\u00c9\u00c8\u0003\u0002\u0002\u0002\u00ca\u00cb\u0003",
    "\u0002\u0002\u0002\u00cb\u00c9\u0003\u0002\u0002\u0002\u00cb\u00cc\u0003",
    "\u0002\u0002\u0002\u00cc\u00ce\u0003\u0002\u0002\u0002\u00cd\u00c9\u0003",
    "\u0002\u0002\u0002\u00cd\u00ce\u0003\u0002\u0002\u0002\u00ce\u00cf\u0003",
    "\u0002\u0002\u0002\u00cf\u00d0\u0007$\u0002\u0002\u00d08\u0003\u0002",
    "\u0002\u0002\u00d1\u00d4\n\u0007\u0002\u0002\u00d2\u00d4\u0005;\u001e",
    "\u0002\u00d3\u00d1\u0003\u0002\u0002\u0002\u00d3\u00d2\u0003\u0002\u0002",
    "\u0002\u00d4:\u0003\u0002\u0002\u0002\u00d5\u00d6\u0007^\u0002\u0002",
    "\u00d6\u00d9\t\b\u0002\u0002\u00d7\u00d9\u0005=\u001f\u0002\u00d8\u00d5",
    "\u0003\u0002\u0002\u0002\u00d8\u00d7\u0003\u0002\u0002\u0002\u00d9<",
    "\u0003\u0002\u0002\u0002\u00da\u00db\u0007^\u0002\u0002\u00db\u00dc",
    "\u0007w\u0002\u0002\u00dc\u00dd\u0005? \u0002\u00dd\u00de\u0005? \u0002",
    "\u00de\u00df\u0005? \u0002\u00df\u00e0\u0005? \u0002\u00e0>\u0003\u0002",
    "\u0002\u0002\u00e1\u00e2\t\t\u0002\u0002\u00e2@\u0003\u0002\u0002\u0002",
    "\u0014\u0002ou\u0081\u008b\u0093\u009b\u00a3\u00ab\u00ae\u00b4\u00bb",
    "\u00be\u00c3\u00cb\u00cd\u00d3\u00d8\u0003\b\u0002\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function FormulaLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

FormulaLexer.prototype = Object.create(antlr4.Lexer.prototype);
FormulaLexer.prototype.constructor = FormulaLexer;

FormulaLexer.EOF = antlr4.Token.EOF;
FormulaLexer.T__0 = 1;
FormulaLexer.T__1 = 2;
FormulaLexer.T__2 = 3;
FormulaLexer.PLUS = 4;
FormulaLexer.MINUS = 5;
FormulaLexer.MULTIPLY = 6;
FormulaLexer.DIVIDE = 7;
FormulaLexer.LPAREN = 8;
FormulaLexer.RPAREN = 9;
FormulaLexer.EQ = 10;
FormulaLexer.NEQ = 11;
FormulaLexer.LT = 12;
FormulaLexer.LE = 13;
FormulaLexer.GT = 14;
FormulaLexer.GE = 15;
FormulaLexer.AND = 16;
FormulaLexer.OR = 17;
FormulaLexer.FALSE = 18;
FormulaLexer.TRUE = 19;
FormulaLexer.NOT = 20;
FormulaLexer.XOR = 21;
FormulaLexer.COMMA = 22;
FormulaLexer.ID = 23;
FormulaLexer.INT = 24;
FormulaLexer.DOUBLE = 25;
FormulaLexer.WS = 26;
FormulaLexer.String = 27;
FormulaLexer.StringCharacter = 28;
FormulaLexer.EscapeSequence = 29;
FormulaLexer.UnicodeEscape = 30;
FormulaLexer.HexDigit = 31;

FormulaLexer.prototype.channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];

FormulaLexer.prototype.modeNames = [ "DEFAULT_MODE" ];

FormulaLexer.prototype.literalNames = [ null, "'#queId_'", "'['", "']'", 
                                        "'+'", "'-'", "'*'", "'/'", "'('", 
                                        "')'", "'=='", "'!='", "'<'", "'<='", 
                                        "'>'", "'>='", null, null, null, 
                                        null, null, null, "','" ];

FormulaLexer.prototype.symbolicNames = [ null, null, null, null, "PLUS", 
                                         "MINUS", "MULTIPLY", "DIVIDE", 
                                         "LPAREN", "RPAREN", "EQ", "NEQ", 
                                         "LT", "LE", "GT", "GE", "AND", 
                                         "OR", "FALSE", "TRUE", "NOT", "XOR", 
                                         "COMMA", "ID", "INT", "DOUBLE", 
                                         "WS", "String", "StringCharacter", 
                                         "EscapeSequence", "UnicodeEscape", 
                                         "HexDigit" ];

FormulaLexer.prototype.ruleNames = [ "T__0", "T__1", "T__2", "PLUS", "MINUS", 
                                     "MULTIPLY", "DIVIDE", "LPAREN", "RPAREN", 
                                     "EQ", "NEQ", "LT", "LE", "GT", "GE", 
                                     "AND", "OR", "FALSE", "TRUE", "NOT", 
                                     "XOR", "COMMA", "ID", "INT", "DOUBLE", 
                                     "WS", "String", "StringCharacter", 
                                     "EscapeSequence", "UnicodeEscape", 
                                     "HexDigit" ];

FormulaLexer.prototype.grammarFileName = "Formula.g4";



exports.FormulaLexer = FormulaLexer;

